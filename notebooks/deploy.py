# -*- coding: utf-8 -*-
"""deploy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eQkL0ACgI3MmnfHQ1cV1Z0FX_sxGAdb4
"""

import os

# Set your AWS credentials as environment variables
os.environ['AWS_ACCESS_KEY_ID'] = 'access key here'
os.environ['AWS_SECRET_ACCESS_KEY'] = 'secret key here'
os.environ['AWS_DEFAULT_REGION'] = 'us-east-1'  # Example: 'us-east-1'

from sagemaker.huggingface import HuggingFaceModel

# Hub model configuration for your wildfire classifier
hub = {
    'HF_MODEL_ID': 'arnaucas/wildfire-classifier',  # Model ID from Hugging Face
    'HF_TASK': 'image-classification'               # Assuming image classification task
}

# Create Hugging Face Model Class
huggingface_model = HuggingFaceModel(
    env=hub,                                           # Configuration for loading the model from Hugging Face Hub
    role=role,                                         # IAM role with permissions to create an endpoint
    transformers_version="4.37",                       # Use a compatible transformers version
    pytorch_version="2.1",                            # Use a compatible PyTorch version
    py_version='py310',                                 # Python version used
)

predictor = huggingface_model.deploy(
    initial_instance_count=1,                          # Number of instances to deploy
    instance_type="ml.g4dn.xlarge"                       # Instance type for deployment
)

# Example input data for inference
data = {
    "inputs": "https://cameras.alertcalifornia.org/public-camera-data/Axis-AllenPeak/latest-frame.jpg"  # Input your image path or data here
}

# Request prediction
response = predictor.predict(data)

# Output prediction results
print(response)

import boto3
import json

# Initialize a SageMaker runtime client
runtime_client = boto3.client('runtime.sagemaker', region_name='us-east-2')

# Endpoint name (from your provided endpoint details)
endpoint_name = 'huggingface-pytorch-inference-2025-01-25-23-07-41-296'

# Sample input data, adjust based on what your model expects
# For example, if you're dealing with image classification:
input_data = {
    "inputs": "https://cameras.alertcalifornia.org/public-camera-data/Axis-AlisoLaguna1/latest-frame.jpg"  # Replace with actual image or data to be classified
}

# Convert input data to JSON format
payload = json.dumps(input_data)

# Call the SageMaker endpoint for inference
response = runtime_client.invoke_endpoint(
    EndpointName=endpoint_name,
    ContentType='application/json',  # Use the content type required by your model
    Body=payload
)

# Parse the response
response_body = json.loads(response['Body'].read().decode())
print("Model Response:", response_body)